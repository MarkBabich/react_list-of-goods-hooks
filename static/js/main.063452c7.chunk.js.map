{"version":3,"sources":["App.tsx","components/ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","visibleGoods","map","item","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","sort","itemPrev","itemCurr","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isReordered","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAC1C,6BACGA,EAAaC,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDHjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KA+BE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMV,EA5BD,SACLW,EACAL,EACAG,GAEA,IAAMT,EAAY,YAAOW,GAiBzB,OAfAX,EAAaY,MAAK,SAACC,EAAUC,GAC3B,OAAQL,GACN,KAAKX,EAASiB,SACZ,OAAOF,EAASG,cAAcF,GAChC,KAAKhB,EAASmB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OACpC,QACE,OAAO,MAITZ,GACFN,EAAamB,UAGRnB,EAMcoB,CAAkBjB,EAAiBG,EAAYG,GAC9DY,EAAcf,GAAcG,IAAaX,EAASU,KAExD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAaX,EAASiB,WAEtCU,QAAS,kBAAMf,EAAYZ,EAASiB,WANtC,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAaX,EAASmB,SAEtCQ,QAAS,kBAAMf,EAAYZ,EAASmB,SANtC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAAS,kBAAMlB,GAAeD,IANhC,qBAWCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,iBAAM,CAAClB,GAAc,GAAQG,EAAYZ,EAASU,QAH7D,sBAUJ,cAAC,EAAD,CAAaR,aAAcA,QEpGjC0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.063452c7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { ListOfGoods } from './components/ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  isReversed: boolean,\n  sortType: SortType,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((itemPrev, itemCurr) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return itemPrev.localeCompare(itemCurr);\n      case SortType.LENGTH:\n        return itemPrev.length - itemCurr.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const visibleGoods = getReorderedGoods(goodsFromServer, isReversed, sortType);\n  const isReordered = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isReordered && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => [setIsReversed(false), setSortType(SortType.NONE)]}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ListOfGoods visibleGoods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  visibleGoods: string[],\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ visibleGoods }) => (\n  <ul>\n    {visibleGoods.map((item) => (\n      <li data-cy=\"Good\" key={item}>\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}